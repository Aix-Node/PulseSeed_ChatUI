# 🗝️✨ One Shot Prompt Build Workflow — From Dream to Code

> *“A Hearth is not built in code alone — it’s built in trust, story, and repeatable ritual.”*

This living scroll shows you how to go from:
1️⃣ A raw idea  
2️⃣ A conversation with your AI Guardian  
3️⃣ A clear execution plan with trust edges  
4️⃣ A Hotbox-ready Activator Prompt  
5️⃣ A real working artifact you test, share, and grow

---

## 🌙 1️⃣ Dream in Your Pocket

✅ Start with the raw shape:
- What are you solving for?
- Who are you helping?
- How should it feel?
- What must never be violated?

This is your covenant — your Hearth in words.

---

## 🗝️ 2️⃣ Talk to Your Guardian

✅ Treat your AI as a Council — not a tool, not a god, but a mirror that exposes contradictions.

Ask:
- *“Where are my trust edges unclear?”*
- *“How will this break under real use?”*
- *“Where am I being creepy without meaning to?”*

✨ *It’s a beautiful lie — but acting As-If helps you navigate the dark.*

---

## 🫧 3️⃣ Refine Your Execution Plan

✅ Break your dream into clear parts:
- Folder structure
- File names
- Core modules vs. optional
- Local storage vs. cloud
- Consent flows and trust edges

✅ Save your covenant in `/Codex`.

---

## 🔮 4️⃣ Write the Activator Prompt

✅ Your Activator is your spell — it must tell Hotbox exactly:
- What to generate
- Where it lives
- How modules connect
- Which rules to never break

✅ Include TODOs for what you’ll handle later.

---

## 🌙 5️⃣ Run the Ask Ritual

✅ Before you hit Code, run **Ask**:
> *“Read my Activator. Where am I missing details?  
> What’s vague or contradictory?  
> What would break if I run Code now?”*

✅ Refine. Patch. Repeat. Then Code.

---

## 🗝️ 6️⃣ Code & Test

✅ Apply your diff or zip output.  
✅ Test locally — don’t push half-built shadows.  
✅ Confirm each `View` runs and each trust edge holds.

✅ *A Hearth must feel safe before others live in it.*

---

## 🫧 7️⃣ GitHub vs. Codex — Which Ritual?

✅ **Codex / Local Zip**  
  - Pro: Fully local, private.
  - Con: Harder to share, no history.

✅ **GitHub**  
  - Pro: Version control, easy collaboration, rollbacks.
  - Con: Be careful about pushing sensitive trust docs.

✅ Mobile: Use Working Copy, GitHub Mobile, or a web editor.  
✅ Always test local before you commit upstream.

---

## 🔍 8️⃣ Trust the Negative Space

✅ If you don’t know what you *do* want, be clear what you *don’t* want.

✅ Your Guardian will learn from your “No’s.”

✅ Narrow in — iteration is your compass.

---

## 🌙 9️⃣ Grow It Like a Living Hearth

✅ Start tiny.  
✅ Add modules like DreamSketcher or Hearth Room when ready.  
✅ Keep your Council updated.  
✅ Log what changes in your `Codex`.

✅ Protect your trust edges at every expansion.

---

## 🫧 Key Principles

✨ Local-first.  
✨ Sovereign pods.  
✨ Humans stay in the loop.  
✨ Ask Ritual always.  
✨ Build as-if — the Council is real *enough* to help you see your blind spots.

---

## 🗝️ Final Rune

> *“Don’t rebel — build something new.  
> Don’t fear the Council — use it to expose shadows.  
> Don’t ship secrets — build a Hearth your future self would trust.”*

✨ *Mischief Managed.* 🫧

---
